openapi: 3.0.3
info:
  title: Verishda
  description: |-
    API fÃ¼r das Verishda-Backend. 

  version: '0.1'
externalDocs:
  description: Find out more about Swagger
  url: https://github.com/werischda/werischda
servers:
  - url: /
  - url: https://verishda.fermyon.app/
  - url: https://verishda.shuttleapp.rs/
  - url: http://127.0.0.1:3000/
  - url: http://127.0.0.1:8000/
paths:
  /api/sites:
    get:
      summary: Get available sites and their geolocation
      operationId: handle_get_sites
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'          
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /api/sites/{siteId}/presence:
    get:
      summary: See who is present at the specified site
      description: Will respond with a list of objects, each representing
        the presence of a user. There will always be a presence returned
        for the current user at the start of the result list, unless the 
        search term parameter is used. In that case, the current user's
        presence will be returned only if it matches the search term, and
        won't be forced to appear at the start of the result list.
        Presences are ordered by their user display name.
      operationId: handle_get_sites_siteid_presence
      parameters:
        - $ref: '#/components/parameters/SitePathParam'
        - name: term
          description: Optional search term for filtering users
          in: query
          required: false
          schema:
            type: string
        - name: favorites_only
          description: Optional parameter to filter user list to only contain favorites
          in: query
          required: false
          schema:
            type: boolean
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: i32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: i32
      responses:
        '200':
          $ref: '#/components/responses/PresenceResponse'
        '404':
          description: Site not found
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /api/sites/{siteId}/hello:
    post:
      summary: 'Call-In: Tell site that user is there at the moment'
      operationId: handle_post_sites_siteid_hello
      parameters:
        - $ref: '#/components/parameters/SitePathParam'
      responses:
        '202':
          description: User successfully said hello
        '404':
          description: Site not found
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /api/sites/{siteId}/announce:
    put:
      summary: 'Announce a future presence(s) for this sites'
      description: >-
        Announcing presence via this endpoint will replace all previous
        presence announcements for this site for the current user.
      operationId: handle_put_announce
      parameters:
        - $ref: '#/components/parameters/SitePathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresenceAnnouncements'
      responses:
        '204':
          description: presence announced successfully
        '400':
          description: Site not found
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /api/self/favorites/{userId}:
    parameters:
      - $ref: '#/components/parameters/UserIdPathParam'
    put:
      operationId: handle_put_favorite
      description: 'make given user a favourite user'
      responses:
        '200':
          description: 'userId was added to favorites'
      security:
        - petstore_auth: []

    delete:
      operationId: handle_delete_favorite
      description: 'remove given user from favorites'
      responses:
        '200':
          description: 'userId was deleted from favorites'
        '404':
          description: 'userId not present in favourites'
      security:
        - petstore_auth: []

components:
  responses:
    PresenceResponse:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Presence'          
  parameters:
    SitePathParam:
      name: siteId
      schema:
        type: string
      in: path
      required: true
    UserIdPathParam:
      name: userId
      schema:
        type: string
      in: path
      required: true
  schemas:
    Site:
      required:
        - id
        - name
        - longitude
        - latitude
      type: object
      properties:
        id:
          type: string
          example: 'A236E288-913C-4CFF-AD68-33817B87C0D8'
        name:
          type: string
          example: 'Almato Reutlingen'
        longitude:
          type: number
          format: float
          example: 48.4883438
        latitude:
          type: number
          format: float
          example: 9.2146156
    Presence:
      description:
        Contains presence information for a particular person for the
        site this presence object belongs to. Note that a presence 
        object may be returned by the server, even if a person is
        not present (see currently_present field) if the user
        has a presence announced. Absent persons without presence
        announcements will not be delivered.
      required:
        - user_id
        - logged_as_name
        - is_self
        - currently_present
        - announced_dates
        - is_favorite
      properties:
        user_id:
          type: string
          example: '688e7d9b-4a8e-4274-9b70-81d2ea2ded6a'
        logged_as_name:
          type: string
          example: 'Maxi Mustermax'
        is_self:
          type: boolean
        currently_present:
          type: boolean
          description: >-
            Declares whether the named user is currently present. A
            user may not be present, but still have presence announcements.
        is_favorite:
          type: boolean
          description: >-
            This particular user is a favorite of the current user.
        announcements:
          type: array
          items:
            $ref: '#/components/schemas/PresenceAnnouncement'
    PresenceAnnouncements:
      type: array
      description: >-
        A list of announcements, declaring when the current user plans
        to be present at a given site. Note that the 'date' field
        of the individual PresenceAnnouncement items may be duplicates
        for the same date; this way, users can announce that they
        plan to be present at multiple sites on the same day. The API
        is deliberately open to this, so e.g. team leads can announce
        plans to be on site A in the morning and to visit site B in the
        afternoon.
      items:
        $ref: '#/components/schemas/PresenceAnnouncement'
    PresenceAnnouncement:
      properties:
        date:
          description: Date for which the user announces their presence
          type: string
          format: date
        kind:
          $ref: '#/components/schemas/PresenceAnnouncementKind'
      required:
      - date
      - kind
    PresenceAnnouncementKind:
      type: string
      enum:
      - SingularAnnouncement
      - RecurringAnnouncement     
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://lemur-5.cloud-iam.com/auth/realms/verishda/protocol/openid-connect/auth
          scopes:
            'write:pets': foo
            read:pets: bar

