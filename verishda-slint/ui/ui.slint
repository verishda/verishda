import { CheckBox , TextEdit, VerticalBox, HorizontalBox, Button, LineEdit, ProgressIndicator, StyleMetrics } from "std-widgets.slint";

import { SitePresenceView, SiteModel, PersonModel } from "mainview.slint";

enum MainWindowState {
    Startup,
    ShowingWelcomeView,
    ShowingSitePresenceView,
    ShowingWaitingForLoginView,
}

export global AppUI {
    pure callback using-invitation-code-requested(string);
    pure callback login_triggered();
    pure callback login_cancelled();
    pure callback site_selected(string);
    pure callback change_favorite_requested(string, bool);
    pure callback refresh_requested();
    pure callback filter_set(string, bool);
    pure callback announcement_change_requested(string, PersonModel, int);

    in property <MainWindowState> state: MainWindowState.ShowingWelcomeView;
    in-out property <[SiteModel]> sites;
    in property <[string]> site_names;
    in property <[PersonModel]> persons;
    in property <int> current_day_index;
}


component FetchProviderMetaView {
    VerticalBox {
        Text {
            text: "Fetching provider metadata...";
        }
        ProgressIndicator {
            height: 20px;
            indeterminate: true;
        }
    }
}
component WelcomeView inherits VerticalBox {

    vertical-stretch: 1;
    callback using-invitation-code-requested(string);

    VerticalLayout {
        vertical-stretch: 1;
        HorizontalLayout {
            Image {
                colorize: StyleMetrics.dark-color-scheme ? white : black;
                source: @image-url("logo-wide.svg");
                horizontal-alignment: center;
            }
            
        }

        VerticalLayout {
            spacing: 5px;
            vertical-stretch: 1;
            alignment: center;
            Text {
                text: "Tell your colleagues when you are in the office!";
                wrap: word-wrap;
            }
            
            Button {
                text: "Login / Create Account";
                clicked => {
                    AppUI.login-triggered();
                }
            }
            }
    }
}

component WaitingForLoginView {
    VerticalBox {
        Text {
            text: "Waiting for login...";
        }
        Button {
            text: "Cancel";
            clicked => {
                AppUI.login-cancelled();
            }
        }
    }
}

export component MainWindow inherits Window {
    title: "Verishda";
    vertical-stretch: 1;

    if AppUI.state == MainWindowState.Startup: 
        fetch_view := FetchProviderMetaView {}

    if AppUI.state == MainWindowState.ShowingWelcomeView:
        welcome_view := WelcomeView {
            y: 0px;
            width: root.width;
            vertical-stretch: 1;
            using-invitation-code-requested(code) => {
                AppUI.using-invitation-code-requested(code);
            }
        }
    
    if AppUI.state == MainWindowState.ShowingWaitingForLoginView:
        waiting_for_login_view := WaitingForLoginView {}
        
    if AppUI.state == MainWindowState.ShowingSitePresenceView: 
        site_presence_view := SitePresenceView {
            width: root.width;
            sites <=> AppUI.sites;
            site_names <=> AppUI.site_names;
            persons <=> AppUI.persons;
            site_selected(site_id) => {
                AppUI.site_selected(site_id);
            }
            refresh_requested() => {
                AppUI.refresh_requested();
            }
            favorite_change_requested(user_id, favorite) => {
                AppUI.change_favorite_requested(user_id, favorite);
            }
            announcement_change_requested(site_id, person, day_index) => {
                AppUI.announcement_change_requested(site_id, person, day_index);
            }
            filter_set(term, favorites-only) => {
                AppUI.filter_set(term, favorites-only);
            }
            current_day_index: AppUI.current_day_index;
        }

    
}